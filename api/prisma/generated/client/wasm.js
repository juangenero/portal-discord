
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  avatarHash: 'avatarHash',
  accessTokenDiscord: 'accessTokenDiscord',
  ivAccessTokenDiscord: 'ivAccessTokenDiscord',
  refreshTokenDiscord: 'refreshTokenDiscord',
  ivRefreshTokenDiscord: 'ivRefreshTokenDiscord',
  accessTokenDiscordExpire: 'accessTokenDiscordExpire',
  fechaCreacion: 'fechaCreacion',
  fechaActualizacion: 'fechaActualizacion'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  idUser: 'idUser',
  refreshTokenHash: 'refreshTokenHash',
  fechaExpiracion: 'fechaExpiracion',
  deviceInfo: 'deviceInfo',
  fechaCreacion: 'fechaCreacion',
  fechaActualizacion: 'fechaActualizacion'
};

exports.Prisma.SonidoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  emoji: 'emoji',
  filename: 'filename',
  file: 'file',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Sonido: 'Sonido'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\dev\\portal-discord\\api\\prisma\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "C:\\dev\\portal-discord\\api\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.8.2",
  "engineVersion": "2060c79ba17c6bb9f5823312b6f6b7f4a845738e",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:./dev.db"
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"./generated/client\"\n  previewFeatures = [\"driverAdapters\"]\n  binaryTargets   = [\"native\", \"debian-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:./dev.db\"\n}\n\nmodel User {\n  id                       String    @id @map(\"id_discord\")\n  username                 String    @map(\"username\")\n  avatarHash               String?   @map(\"avatar_hash\")\n  accessTokenDiscord       String?   @map(\"access_token_discord\")\n  ivAccessTokenDiscord     String?   @map(\"iv_access_token_discord\")\n  refreshTokenDiscord      String?   @map(\"refresh_token_discord\")\n  ivRefreshTokenDiscord    String?   @map(\"iv_refresh_token_discord\")\n  accessTokenDiscordExpire DateTime? @map(\"access_token_discord_expire\")\n  fechaCreacion            DateTime  @default(now()) @map(\"fecha_creacion\")\n  fechaActualizacion       DateTime  @updatedAt @map(\"fecha_actualizacion\")\n\n  sessions Session[]\n}\n\nmodel Session {\n  id                 String   @id @default(uuid())\n  idUser             String   @map(\"id_user\")\n  refreshTokenHash   String   @unique @map(\"refresh_token_hash\")\n  fechaExpiracion    DateTime @map(\"fecha_expiracion\")\n  deviceInfo         String   @map(\"device_info\")\n  fechaCreacion      DateTime @default(now()) @map(\"fecha_creacion\")\n  fechaActualizacion DateTime @updatedAt @map(\"fecha_actualizacion\")\n\n  user User @relation(fields: [idUser], references: [id])\n}\n\nmodel Sonido {\n  id        Int      @id @default(autoincrement())\n  nombre    String\n  emoji     String?\n  filename  String\n  file      Bytes\n  createdAt DateTime @default(now())\n}\n",
  "inlineSchemaHash": "09b8d9ffa8a4d5133ba8e6921466ae46e22d87d0f21d18e5d6eac22c446349c3",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id_discord\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"username\"},{\"name\":\"avatarHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"avatar_hash\"},{\"name\":\"accessTokenDiscord\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"access_token_discord\"},{\"name\":\"ivAccessTokenDiscord\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"iv_access_token_discord\"},{\"name\":\"refreshTokenDiscord\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"refresh_token_discord\"},{\"name\":\"ivRefreshTokenDiscord\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"iv_refresh_token_discord\"},{\"name\":\"accessTokenDiscordExpire\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"access_token_discord_expire\"},{\"name\":\"fechaCreacion\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"fecha_creacion\"},{\"name\":\"fechaActualizacion\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"fecha_actualizacion\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idUser\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id_user\"},{\"name\":\"refreshTokenHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"refresh_token_hash\"},{\"name\":\"fechaExpiracion\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"fecha_expiracion\"},{\"name\":\"deviceInfo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"device_info\"},{\"name\":\"fechaCreacion\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"fecha_creacion\"},{\"name\":\"fechaActualizacion\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"fecha_actualizacion\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"Sonido\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emoji\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file\",\"kind\":\"scalar\",\"type\":\"Bytes\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

