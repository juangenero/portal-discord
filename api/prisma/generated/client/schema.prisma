// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "./generated/client"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                       String    @id @map("id_discord")
  username                 String    @map("username")
  avatarHash               String?   @map("avatar_hash")
  accessTokenDiscord       String?   @map("access_token_discord")
  ivAccessTokenDiscord     String?   @map("iv_access_token_discord")
  refreshTokenDiscord      String?   @map("refresh_token_discord")
  ivRefreshTokenDiscord    String?   @map("iv_refresh_token_discord")
  accessTokenDiscordExpire DateTime? @map("access_token_discord_expire")
  fechaCreacion            DateTime  @default(now()) @map("fecha_creacion")
  fechaActualizacion       DateTime  @updatedAt @map("fecha_actualizacion")

  sessions Session[]
}

model Session {
  id                 String   @id @default(uuid())
  idUser             String   @map("id_user")
  refreshTokenHash   String   @unique @map("refresh_token_hash")
  fechaExpiracion    DateTime @map("fecha_expiracion")
  deviceInfo         String   @map("device_info")
  fechaCreacion      DateTime @default(now()) @map("fecha_creacion")
  fechaActualizacion DateTime @updatedAt @map("fecha_actualizacion")

  user User @relation(fields: [idUser], references: [id])
}

model Sonido {
  id        Int      @id @default(autoincrement())
  nombre    String
  emoji     String?
  filename  String
  file      Bytes
  createdAt DateTime @default(now())
}
